(self.webpackChunk_bull_board_ui=self.webpackChunk_bull_board_ui||[]).push([["21374"],{1906:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getDefaultOptions=function(){return r},t.setDefaultOptions=function(e){r=e};var r={}},85345:function(e,t,r){"use strict";var o=r(15755).default;Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){(0,u.default)(2,arguments);var o=(0,n.default)(e,r),a=(0,n.default)(t,r);return o.getTime()===a.getTime()};var u=o(r(26193)),n=o(r(23658));e.exports=t.default},26193:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(t.length<e)throw TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")},e.exports=t.default},23658:function(e,t,r){"use strict";var o=r(15755).default;Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,n.default)(1,arguments);var r,o,s,f,i,d,c,p,b=(0,l.getDefaultOptions)(),v=(0,a.default)(null!=(r=null!=(o=null!=(s=null!=(f=null==t?void 0:t.weekStartsOn)?f:null==t||null==(i=t.locale)||null==(d=i.options)?void 0:d.weekStartsOn)?s:b.weekStartsOn)?o:null==(c=b.locale)||null==(p=c.options)?void 0:p.weekStartsOn)?r:0);if(!(v>=0&&v<=6))throw RangeError("weekStartsOn must be between 0 and 6 inclusively");var y=(0,u.default)(e),_=y.getUTCDay();return y.setUTCDate(y.getUTCDate()-(7*(_<v)+_-v)),y.setUTCHours(0,0,0,0),y};var u=o(r(39276)),n=o(r(26193)),a=o(r(65862)),l=r(1906);e.exports=t.default},65862:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)},e.exports=t.default},21778:function(e,t,r){"use strict";var o=r(15755).default;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var u=o(r(85345)),n=["nedeľu","pondelok","utorok","stredu","štvrtok","piatok","sobotu"];function a(e){var t=n[e];return 4===e?"'vo' eeee 'o' p":"'v "+t+" o' p"}var l={lastWeek:function(e,t,r){var o=e.getUTCDay();if((0,u.default)(e,t,r))return a(o);var l=n[o];switch(o){case 0:case 3:case 6:return"'minul\xfa "+l+" o' p";default:return"'minul\xfd' eeee 'o' p"}},yesterday:"'včera o' p",today:"'dnes o' p",tomorrow:"'zajtra o' p",nextWeek:function(e,t,r){var o=e.getUTCDay();if((0,u.default)(e,t,r))return a(o);var l=n[o];switch(o){case 0:case 4:case 6:return"'bud\xfacu "+l+" o' p";default:return"'bud\xfaci' eeee 'o' p"}},other:"P"};t.default=function(e,t,r,o){var u=l[e];return"function"==typeof u?u(t,r,o):u},e.exports=t.default},39276:function(e,t,r){"use strict";var o=r(15755).default;Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,n.default)(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===(0,u.default)(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):(("string"==typeof e||"[object String]"===t)&&"undefined"!=typeof console&&(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn(Error().stack)),new Date(NaN))};var u=o(r(69430)),n=o(r(26193));e.exports=t.default},15755:function(e){e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},69430:function(e){function t(r){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(r)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports}}]);